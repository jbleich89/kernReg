% Generated by roxygen2 (4.0.1): do not edit by hand
\name{eval_winning_r_model_on_test_data}
\alias{eval_winning_r_model_on_test_data}
\title{Evaluate Test Data}
\usage{
eval_winning_r_model_on_test_data(explore_kpcr, use_validation_data = TRUE)
}
\arguments{
\item{explore_kpcr}{This object is built from \code{explore_kpcr_models}. We assume the user has updated
this object with a satisfactory model by settings \code{winning_kernel_num} to denote
which kernel is selected for the final model and setting \code{winning_rho_num} to
denote which proportion of the variance of the kernel matrix is selected for the
final model.}

\item{use_validation_data}{Should we use the validation data along with the training data. Default is \code{TRUE}.
                                    From our experience, leaving this \code{FALSE} allows models with better out-of-sample
                                    error ratios (number of false negatives to false positives or vice versa). The tradeoff
                                    is a larger overall misclassification error because the model is build with the sample size
                                    of the training data, not the training plus the validation data.}
}
\value{
An expanded \code{explore_kpcr} list object with new entries
									that contain information about the performance of the final model on the
									test data: \code{L2_err}, the sum of squared error; \code{rmse}, the root
									mean squared error and \code{L1_err}, the sum of absolute error.
}
\description{
After a "satisfactory" model is selected by the user using the \code{explore_kpcr_models} function,
we now predict on the test data to get a glimpse into this model's future out-of-sample performance.
Warning: once this is done, you cannot "go back" and "try" to assess performance on new kernels as this
would then be snooping. Run this function when you are ready to close the books on this data set and never
look back.
}
\author{
Adam Kapelner and Justin Bleich
}
\seealso{
\code{\link{explore_kplr_models}}
}

